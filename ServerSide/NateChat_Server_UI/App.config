<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <!-- Define some output appenders -->
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径-->
      <file value="logContent.txt"/>
      <!--是否向文件中追加日志-->
      <appendToFile value="true"/>
      <!--日志保留天数-->
      <maxSizeRollBackups value="10"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="1024KB"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Size"/>
      <!--否只写到一个文件中-->
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <!--记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger  操作者ID：%property{Operator} 操作类型：%property{Action}%n    当前机器名:%property%n当前机器名及登录用户：%username %n    记录位置：%location%n 消息描述：%property{Message}%n     异常：%exception%n 消息：%message%newline%n%n-->
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingLogFileAppender"/>
    </root>
  </log4net>
  <connectionStrings>
    <add name="connStr" connectionString="Data Source=.;Initial Catalog=NateChat_DB;Integrated Security=True"/>
  </connectionStrings>
 
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <!-- 部署服务库项目时，必须将配置文件的内容添加到
 主机的 app.config 文件中。System.Configuration 不支持库的配置文件。 -->
  <!--删除服务数据后要在配置节点里面删除对应节点（不会自动删除）-->
  <system.serviceModel>
    <services>
      <!--聊天协议，使用TCP而非HTTP-->
      <!--服务名必须是唯一的，不能重复-->
      <service name="NateChat_Server_Service.ChatService">
        <!--不同的通信协议，binding的绑定方式也不同-->
        <endpoint address="" binding="netTcpBinding" contract="NateChat_Server_Service.IChatService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexTcpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="net.tcp://localhost:9999//ChatService" />
          </baseAddresses>
        </host>
      </service>
      <!--登陆协议-->
      <service name="NateChat_Server_Service.UsersService">
        <endpoint address="" binding="basicHttpBinding" contract="NateChat_Server_Service.IUsersService">
          <identity>
            <dns value="localhost" />
            <!--即使以后正式发布，也不用改localhost-->
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/NateChat_Server_Service/UsersService/" />
          </baseAddresses>
        </host>
      </service>
      <service name="NateChat_Server_Service.Data.GroupService">
        <endpoint address="" binding="basicHttpBinding" contract="NateChat_Server_Service.Data.IGroupService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/NateChat_Server_Service.Data/GroupService/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- 为避免泄漏元数据信息，
          请在部署前将以下值设置为 false -->
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="false"/>
          <!-- 要接收故障异常详细信息以进行调试，
          请将以下值设置为 true。在部署前设置为 false 
          以避免泄漏异常信息 -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

</configuration>

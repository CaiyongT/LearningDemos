//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NateChat_Client.ServerService.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/NateChat_Server_Models.Models")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVaildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageIndex {
            get {
                return this.ImageIndexField;
            }
            set {
                if ((this.ImageIndexField.Equals(value) != true)) {
                    this.ImageIndexField = value;
                    this.RaisePropertyChanged("ImageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVaild {
            get {
                return this.IsVaildField;
            }
            set {
                if ((this.IsVaildField.Equals(value) != true)) {
                    this.IsVaildField = value;
                    this.RaisePropertyChanged("IsVaild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pwd {
            get {
                return this.PwdField;
            }
            set {
                if ((object.ReferenceEquals(this.PwdField, value) != true)) {
                    this.PwdField = value;
                    this.RaisePropertyChanged("Pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelePhone {
            get {
                return this.TelePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelePhoneField, value) != true)) {
                    this.TelePhoneField = value;
                    this.RaisePropertyChanged("TelePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerService.UserService.IUsersService")]
    public interface IUsersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Login", ReplyAction="http://tempuri.org/IUsersService/LoginResponse")]
        NateChat_Client.ServerService.UserService.Users Login(NateChat_Client.ServerService.UserService.Users users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Login", ReplyAction="http://tempuri.org/IUsersService/LoginResponse")]
        System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users> LoginAsync(NateChat_Client.ServerService.UserService.Users users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Register", ReplyAction="http://tempuri.org/IUsersService/RegisterResponse")]
        NateChat_Client.ServerService.UserService.Users Register(NateChat_Client.ServerService.UserService.Users users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/Register", ReplyAction="http://tempuri.org/IUsersService/RegisterResponse")]
        System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users> RegisterAsync(NateChat_Client.ServerService.UserService.Users users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetFriendsByUserId", ReplyAction="http://tempuri.org/IUsersService/GetFriendsByUserIdResponse")]
        NateChat_Client.ServerService.UserService.Users[] GetFriendsByUserId(NateChat_Client.ServerService.UserService.Users users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersService/GetFriendsByUserId", ReplyAction="http://tempuri.org/IUsersService/GetFriendsByUserIdResponse")]
        System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users[]> GetFriendsByUserIdAsync(NateChat_Client.ServerService.UserService.Users users);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersServiceChannel : NateChat_Client.ServerService.UserService.IUsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersServiceClient : System.ServiceModel.ClientBase<NateChat_Client.ServerService.UserService.IUsersService>, NateChat_Client.ServerService.UserService.IUsersService {
        
        public UsersServiceClient() {
        }
        
        public UsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NateChat_Client.ServerService.UserService.Users Login(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.Login(users);
        }
        
        public System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users> LoginAsync(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.LoginAsync(users);
        }
        
        public NateChat_Client.ServerService.UserService.Users Register(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.Register(users);
        }
        
        public System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users> RegisterAsync(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.RegisterAsync(users);
        }
        
        public NateChat_Client.ServerService.UserService.Users[] GetFriendsByUserId(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.GetFriendsByUserId(users);
        }
        
        public System.Threading.Tasks.Task<NateChat_Client.ServerService.UserService.Users[]> GetFriendsByUserIdAsync(NateChat_Client.ServerService.UserService.Users users) {
            return base.Channel.GetFriendsByUserIdAsync(users);
        }
    }
}
